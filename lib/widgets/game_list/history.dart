import 'package:flutter/material.dart';

import '../../utils/constants.dart';
import '../history.dart';
import '../route_builder.dart';

/// History widget for game list items.
class History extends StatelessWidget {
  /// [id] required for hero widgets.
  final String id;

  /// [iconSize] is generated by parent.
  final double iconSize;

  /// [history] map containing all events made during this game.
  final Map<int, dynamic> history;

  /// Constructor.
  History(this.id, this.iconSize, this.history);

  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: () => Navigator.of(context).push(sizedRouteBuilder(
          context, HistoryList(id, history), .4, .6, primaryColor)),
      child: Hero(
        tag: '$id history',
        child: Image(
          image: AssetImage('assets/scroll/base.png'),
          width: iconSize,
        ),
      ),
    );
  }
}

/// Stateful widget of history so scroll icon would update on page change.
class HistoryList extends StatefulWidget {
  /// [id] required for hero widgets
  final String id;

  /// [history] map containing all events made during this game
  final Map<int, dynamic> history;

  /// Constructor
  HistoryList(this.id, this.history);

  @override
  _HistoryListState createState() => _HistoryListState();
}

class _HistoryListState extends State<HistoryList> {
  int _page;

  @override
  void initState() {
    _page = 0;
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Theme(
      data: themeData.copyWith(accentColor: secondaryColor),
      child: Column(
        children: <Widget>[
          Padding(
            padding: const EdgeInsets.only(top: 5.0, bottom: 5.0),
            child: Hero(
              tag: '${widget.id} history',
              child: Image(
                image: AssetImage('assets/scroll/$_page.png'),
                width: MediaQuery.of(context).size.width / 12,
              ),
            ),
          ),
          Expanded(
            child: Padding(
              padding: const EdgeInsets.only(bottom: 8.0),
              child: PageView(
                physics: AlwaysScrollableScrollPhysics(),
                controller: PageController(initialPage: 0),
                onPageChanged: (page) {
                  setState(() {
                    _page = page;
                  });
                },
                children: <Widget>[
                  ListBuilder(widget.history[0], gameListHistory),
                  ListBuilder(widget.history[1], gameListHistory),
                  ListBuilder(widget.history[2], gameListHistory)
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
